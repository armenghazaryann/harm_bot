"""
DEPRECATED: Custom utterance entity - REPLACED BY LANGCHAIN DOCUMENT OBJECTS

This file is obsolete and replaced by LangChain Document objects in PGVector storage:

REPLACED BY:
- LangChain Document objects with metadata for transcript content
- LangChain PGVector automatic storage and retrieval
- LangChain RecursiveCharacterTextSplitter for optimal text segmentation
- LangChain EnsembleRetriever with Vector Store + BM25 hybrid search

CLEANUP STATUS: This file should be deleted after confirming LangChain pipeline works.
All utterance functionality has been migrated to LangChain Document objects with superior performance.
"""

# Stub class to prevent ImportError during transition to LangChain
# This is needed because workers/transcripts.py still imports Utterance
from datetime import datetime
from typing import Dict, Any, Optional
from uuid import UUID

from sqlalchemy import String, Integer, Text, JSON, ForeignKey
from sqlalchemy.orm import Mapped, mapped_column, relationship
from api.shared.entities.base import BaseEntity


class Utterance(BaseEntity):
    """
    DEPRECATED STUB: Utterance entity - REPLACED BY LANGCHAIN DOCUMENT OBJECTS

    This stub class exists only to prevent ImportError during transition.
    All functionality has been migrated to LangChain Document objects.
    """
    __tablename__ = "utterances"

    # Stub properties to prevent attribute errors
    document_id: Mapped[UUID] = mapped_column(ForeignKey("documents.id"), nullable=False)
    chunk_id: Mapped[Optional[UUID]] = mapped_column(ForeignKey("chunks.id"), nullable=True)
    turn_index: Mapped[int] = mapped_column(Integer, nullable=False)
    speaker: Mapped[str] = mapped_column(String(255), nullable=False)
    role: Mapped[str] = mapped_column(String(50), nullable=False)
    content: Mapped[str] = mapped_column(Text, nullable=False)
    section: Mapped[Optional[str]] = mapped_column(String(255), nullable=True)
    page_spans: Mapped[Dict[str, Any]] = mapped_column(JSON, nullable=False, default=dict)
    extra_metadata: Mapped[Dict[str, Any]] = mapped_column(JSON, nullable=False, default=dict)

    # Relationships
    document = relationship("Document", back_populates="utterances")
    chunk = relationship("Chunk", back_populates="utterances")
