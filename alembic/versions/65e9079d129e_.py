"""

Revision ID: 65e9079d129e
Revises: 
Create Date: 2025-09-12 20:02:16.558933

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector
# revision identifiers, used by Alembic.
revision: str = '65e9079d129e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=False),
    sa.Column('doc_type', sa.Enum('TRANSCRIPT', 'EARNINGS_RELEASE', 'SLIDE_DECK', 'PRESS_ANNOUNCEMENT', name='documenttype'), nullable=False),
    sa.Column('status', sa.Enum('UPLOADED', 'PROCESSING', 'PROCESSED', 'CHUNKED', 'EMBEDDED', 'INDEXED', 'FAILED', name='documentstatus'), nullable=False),
    sa.Column('raw_path', sa.String(length=500), nullable=False),
    sa.Column('processed_path', sa.String(length=500), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('processing_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('checksum')
    )
    op.create_table('job',
    sa.Column('job_type', sa.String(length=50), nullable=False),
    sa.Column('celery_task_id', sa.String(length=255), nullable=True),
    sa.Column('idempotency_key', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_celery_task', 'job', ['celery_task_id'], unique=False)
    op.create_index('idx_job_idempotency', 'job', ['job_type', 'idempotency_key'], unique=True)
    op.create_index('idx_job_status', 'job', ['status'], unique=False)
    op.create_index('idx_job_type', 'job', ['job_type'], unique=False)
    op.create_table('chunk',
    sa.Column('document_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('chunk_hash', sa.String(length=64), nullable=False),
    sa.Column('chunk_type', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_normalized', sa.Text(), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('section_title', sa.String(length=500), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chunk_hash')
    )
    op.create_index('idx_chunk_document_sequence', 'chunk', ['document_id', 'sequence_number'], unique=False)
    op.create_index('idx_chunk_page', 'chunk', ['page_number'], unique=False)
    op.create_index('idx_chunk_type', 'chunk', ['chunk_type'], unique=False)
    op.create_table('embedding',
    sa.Column('chunk_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('embedding_space', sa.String(length=20), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chunk_id'], ['chunk.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_embedding_space', 'embedding', ['embedding_space'], unique=False)
    op.create_index('idx_embedding_vector_cosine', 'embedding', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.create_index('idx_embedding_vector_ip', 'embedding', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_ops={'embedding': 'vector_ip_ops'})
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_embedding_vector_ip', table_name='embedding', postgresql_using='hnsw', postgresql_ops={'embedding': 'vector_ip_ops'})
    op.drop_index('idx_embedding_vector_cosine', table_name='embedding', postgresql_using='hnsw', postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.drop_index('idx_embedding_space', table_name='embedding')
    op.drop_table('embedding')
    op.drop_index('idx_chunk_type', table_name='chunk')
    op.drop_index('idx_chunk_page', table_name='chunk')
    op.drop_index('idx_chunk_document_sequence', table_name='chunk')
    op.drop_table('chunk')
    op.drop_index('idx_job_type', table_name='job')
    op.drop_index('idx_job_status', table_name='job')
    op.drop_index('idx_job_idempotency', table_name='job')
    op.drop_index('idx_job_celery_task', table_name='job')
    op.drop_table('job')
    op.drop_table('document')
    # ### end Alembic commands ###
