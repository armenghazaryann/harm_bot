version: "3.9"

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rag}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro

  redis:
    image: redis:7-alpine
    container_name: rag_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"

  minio:
    image: minio/minio:latest
    container_name: rag_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-setup:
    image: minio/mc:latest
    container_name: rag_minio_setup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin} &&
      mc mb -p local/${MINIO_BUCKET:-rag} || true
      "

#  neo4j:
#    image: neo4j:5
#    container_name: rag_neo4j
#    environment:
#      NEO4J_AUTH: neo4j/neo4jPass12345
#    ports:
#      - "7474:7474" # HTTP
#      - "7687:7687" # Bolt
#    volumes:
#      - neo4j_data:/data
#      - neo4j_logs:/logs
#    healthcheck:
#      test: ["CMD-SHELL", "cypher-shell -a bolt://localhost:7687 -u neo4j -p neo4jPass12345 'RETURN 1' || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 12

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
#      neo4j:
#        condition: service_healthy
      minio:
        condition: service_started
    volumes:
      - .:/app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_worker
    env_file: .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
#      neo4j:
#        condition: service_healthy
      minio:
        condition: service_started
    volumes:
      - .:/app
    command: celery -A workers.celery_app.app worker --loglevel=info --queues=ingest,chunk,embed,index

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_flower
    env_file: .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_started
    volumes:
      - .:/app
    command: celery -A workers.celery_app.app flower --port=5555

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_streamlit
    env_file: .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8501:8501"
    depends_on:
      api:
        condition: service_started
    volumes:
      - .:/app
    command: streamlit run streamlit_ui/chat_ui.py --server.address 0.0.0.0 --server.port 8501

volumes:
  pg_data:
  minio_data:
#  neo4j_data:
#  neo4j_logs:
